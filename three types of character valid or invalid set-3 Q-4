#include<iostream>
#include<stack>
using namespace std;

bool checkValid(string s) {
    stack<char> st;

    for (int i = 0; i < s.size(); i++) {
        if (s[i] == '(' || s[i] == '{' || s[i] == '[') {
            // Push opening brackets onto the stack
            st.push(s[i]);
        } 
        else if (s[i] == ')' || s[i] == '}' || s[i] == ']') {
            // If stack is empty or top does not match, return false
            if (st.empty()) {
                return false;
            }
            char top = st.top();
            st.pop();
            if ((s[i] == ')' && top != '(') ||
                (s[i] == '}' && top != '{') ||
                (s[i] == ']' && top != '[')) {
                return false;
            }
        }
    }

    // If stack is empty, the string is valid
    return st.empty();
}

int main() {
    string s = "(()()())";  // Example string
    if (checkValid(s)) {
        cout << "true";
    } else {
        cout << "false";
    }

    return 0;
}
